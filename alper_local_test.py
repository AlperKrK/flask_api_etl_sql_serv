import requests
import pandas 
import json
import pyodbc
import datetime
from datetime import datetime
import numpy as np



       
url = 'http://localhost:5002'
header = {"Content-Type":"application/json",
         "Accept-Encoding":"deflate"}

response = requests.get(url,headers=header)
#print(response)

responseData= response.json()
#print('Data alindi : ',responseData)


         
df2 = pandas.json_normalize(responseData["RegulatoryCompliance"]['EU'])
df3 = pandas.json_normalize(responseData["RegulatoryCompliance"]['US'])
df2['MIFID_II_COMPLIANCE_FLAG'] = df2['MiFID II Compliance'].astype(int)
df3['FINRA_COMPLIANCE_FLAG'] = df3['FINRA Compliance'].astype(int)
df3['SEC_REPORTING_FLAG'] = df3['SEC Reporting'].astype(int)
#print("new int:  ",df2['MIFID_II_COMPLIANCE_FLAG'][0])
        

df1 =  pandas.json_normalize(responseData)
df =  pandas.json_normalize(responseData["TransactionDetails"])


TRANSACTION_ID = df1['TransactionID'][0]
df['TRANSACTION_ID'] = TRANSACTION_ID
CREATE_DATE = datetime.fromisoformat(df1['Timestamp'][0])
df['CREATE_DATE'] = CREATE_DATE
CURRENCY_CODE = df1['Currency'][0]
df['CURRENCY_CODE'] = CURRENCY_CODE
df['DATEID'] = df['CREATE_DATE'].dt.strftime('%Y%m%d')


SEC_REPORTING_FLAG = df3['SEC Reporting'].astype(int)
df1['SEC_REPORTING_FLAG'] = SEC_REPORTING_FLAG
MIFID_II_COMPLIANCE_FLAG = df2['MiFID II Compliance'].astype(int)
df1['MIFID_II_COMPLIANCE_FLAG'] = MIFID_II_COMPLIANCE_FLAG
FINRA_COMPLIANCE_FLAG = df3['FINRA Compliance'].astype(int)
df1['FINRA_COMPLIANCE_FLAG'] = FINRA_COMPLIANCE_FLAG
#df1['InstrumentType'] = df1['InstrumentType'].fillna('default_value')
df1['DATEID'] = df['DATEID']

# Replace empty strings with NaN
df1.replace('', np.nan, inplace=True)

# Replace NaN values with 'default_value'
df1.fillna('UNKNOWN', inplace=True)



#DATABASE BAGLANTISI PYODBC UZERINDEN SAGLANIR
conn = pyodbc.connect(
    #'Data Source Name=odbc_drivers_sql;'
    #'Driver={SQL Server};'
    'Driver={ODBC Driver 17 for SQL Server};'
    'Server=LAPTOP-LLBKM3AD\\SQLEXPRESS;'
    'Database=EDWH;'
    'Trusted_connection=yes;'
)


#ODS_TRANSACTION_DETAIL DATASI FLASK APIDEN PARSE EDILEREK ALINIR
cursor = conn.cursor()
for index in df.iterrows():
            cursor.execute("INSERT INTO dbo.ODS_TRANSACTION_DETAIL_DATA(TRANSACTION_ID,DATEID,CURRENCY_CODE,CLIENTACCOUNT,EXECUTIONPRICE,ORDERPRICE,ORDERTYPE,ORDERQUANTITY,CREATE_DATE,ETL_DATE)"
                "values(?,?,?,?,?,?,?,?,?,?)", 
                    df['TRANSACTION_ID'][0],
                    df['DATEID'][0],
                    df['CURRENCY_CODE'][0],
                    df['ClientAccount'][0],
                    df['ExecutionPrice'][0],
                    int(df['OrderPrice'][0]),
                    df['OrderType'][0],
                    int(df['OrderQuantity'][0]),
                    df['CREATE_DATE'][0],
                    datetime.now()
                    
                    )
conn.commit()
cursor.close()

#ODS_TRANSACTION_DATA DATASI FLASK APIDEN PARSE EDILEREK ALINIR
cursor1 = conn.cursor()
for index in df1.iterrows():
     cursor1.execute("INSERT INTO dbo.ODS_TRANSACTION_DATA(TRANSACTION_ID,DATEID,TRANSACTION_TYPE,COUNTERPARTY,COUNTERPARTY_LOCATION,CURRENCY,INSTRUMENTNAME,INSTRUMENTTYPE,MIFID_II_COMPLIANCE_FLAG,FINRA_COMPLIANCE_FLAG,SEC_REPORTING_FLAG,TRANSACTION_AMOUNT,CREATE_DATE,ETL_DATE) "
     "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)", 
                    df1['TransactionID'][0],
                    df1['DATEID'][0],
                    df1['TransactionType'][0],
                    df1['Counterparty'][0],
                    df1['CounterpartyLocation'][0],
                    df1['Currency'][0],
                    df1['InstrumentName'][0],
                    df1['InstrumentType'][0],
                    int(df1['MIFID_II_COMPLIANCE_FLAG'][0]),
                    int(df1['FINRA_COMPLIANCE_FLAG'][0]),
                    int(df1['SEC_REPORTING_FLAG'][0]),
                    float(df1['TransactionAmount'][0]),
                    datetime.fromisoformat(df1['Timestamp'][0]),
                    datetime.now()
                    )
conn.commit()
cursor1.close()

#FACT_CONTRACT_DETAIL TABLOSU ETL_DATE E GORE DOLDURULUR
cursor2 = conn.cursor()
cursor2.execute("INSERT INTO DBO.FACT_CONTRACT_DETAIL SELECT DA.DATEID,DA.CURRENCY_CODE,DA.TRANSACTION_ID,DA.CLIENTACCOUNT,DA.EXECUTIONPRICE,DA.ORDERPRICE,DA.ORDERQUANTITY,DA.ORDERPRICE*DA.ORDERQUANTITY*D.TL_EXCHANGE_RATE AS TL_AMOUNT,DA.ORDERPRICE*DA.ORDERQUANTITY*D.USD_EXCHANGE_RATE AS  USD_AMOUNT,(DA.EXECUTIONPRICE-DA.ORDERPRICE)*DA.ORDERQUANTITY*D.TL_EXCHANGE_RATE AS GROSS_MARGIN_TL_AMOUNT,(DA.EXECUTIONPRICE-DA.ORDERPRICE)*DA.ORDERQUANTITY*D.USD_EXCHANGE_RATE AS GROSS_MARGIN_USD_AMOUNT,DA.CREATE_DATE,GETDATE() AS ETL_DATE FROM (SELECT * FROM (SELECT DD.*,ROW_NUMBER() OVER(ORDER BY DD.ETL_DATE DESC) AS RNK FROM DBO.ODS_TRANSACTION_DETAIL_DATA DD) HH WHERE RNK = 1) DA JOIN (SELECT * FROM DBO.DIM_EXCHANGE_RATE WHERE DATEID=  CONVERT(VARCHAR(8),GETDATE(),112))D ON D.DATEID = DA.DATEID  AND  D.CURRENCY_CODE =DA.CURRENCY_CODE ")
conn.commit()
cursor2.close()

#TRANSACTION HISTORY OLUSTURULMASI ICIN ARA TABLO BOSALTILIR
cursor3 =  conn.cursor()
cursor3.execute ("TRUNCATE TABLE DBO.STG_TRANSACTION_DATA")
conn.commit()
cursor3.close()

#TRANSACTION HISTORY ICIN ARA TABLO DOLDURULUR
cursor4 =  conn.cursor()
cursor4.execute ("INSERT INTO dbo.STG_TRANSACTION_DATA SELECT CONVERT(VARCHAR(8),T.CREATE_DATE,112) AS DATEID,CONCAT(CONCAT(A.CURRENCY_NO,'',B.INSTRUMENT_TYPE_ID),'',C.TRANSACTION_TYPE_ID) AS CONTRACT_NO,T.TRANSACTION_ID,C.TRANSACTION_TYPE_ID,T.TRANSACTION_TYPE,T.COUNTERPARTY,T.COUNTERPARTY_LOCATION,T.CURRENCY,T.INSTRUMENTNAME,B.INSTRUMENT_TYPE_ID,T.INSTRUMENTTYPE,T.MIFID_II_COMPLIANCE_FLAG,T.FINRA_COMPLIANCE_FLAG,T.SEC_REPORTING_FLAG,T.TRANSACTION_AMOUNT,(T.TRANSACTION_AMOUNT*DTA.TL_EXCHANGE_RATE) AS TL_AMOUNT,(T.TRANSACTION_AMOUNT*DTA.USD_EXCHANGE_RATE) AS USD_AMOUNT,T.CREATE_DATE,GETDATE() EFF_FROM_DATE,NULL AS EFF_TO_DATE,'Y' AS IS_CURRENT,GETDATE() ETL_DATE FROM (SELECT A.* FROM (SELECT DT.*, ROW_NUMBER() OVER(ORDER BY DT.ETL_DATE DESC) AS RNK FROM ODS_TRANSACTION_DATA DT) A WHERE A.RNK = '1') T LEFT JOIN  DBO.DIM_CURRENCY_TYPE A ON T.CURRENCY = A.CURRENCY_CODE LEFT JOIN DBO.DIM_INSTRUMENT_TYPE B ON B.INSTRUMENT_TYPE_NAME =  T.INSTRUMENTTYPE LEFT JOIN DBO.DIM_TRANSACTION_TYPE C ON C.TRANSACTION_TYPE_NAME =  T.TRANSACTION_TYPE LEFT JOIN (SELECT * FROM DBO.DIM_EXCHANGE_RATE WHERE DATEID=  CONVERT(VARCHAR(8),GETDATE(),112)) DTA ON DTA.DATEID = T.DATEID AND DTA.CURRENCY_CODE=T.CURRENCY")
conn.commit()
cursor4.close()
#EGER KEY ALANINDAKI KAYIT YENI GELMISSE FACT_CONTRACT_TRANSACTION TABLOSUNUN UZERINE YAZILIR
cursor5 = conn.cursor()
cursor5.execute ("INSERT INTO DBO.FACT_CONTRACT_TRANSACTION SELECT SRC.DATEID,SRC.CONTRACT_NO,SRC.TRANSACTION_ID,SRC.TRANSACTION_TYPE_ID,SRC.TRANSACTION_TYPE,SRC.COUNTERPARTY,SRC.COUNTERPARTY_LOCATION,SRC.CURRENCY,SRC.INSTRUMENTNAME,SRC.INSTRUMENT_TYPE_ID,SRC.INSTRUMENTTYPE,SRC.MIFID_II_COMPLIANCE_FLAG,SRC.FINRA_COMPLIANCE_FLAG,SRC.SEC_REPORTING_FLAG,SRC.TRANSACTION_AMOUNT,SRC.TL_AMOUNT,SRC.USD_AMOUNT,SRC.CREATE_DATE,GETDATE() EFF_FROM_DATE,NULL AS EFF_TO_DATE,'Y' AS IS_CURRENT,GETDATE() ETL_DATE FROM DBO.STG_TRANSACTION_DATA SRC WHERE  NOT EXISTS (SELECT 1 FROM DBO.FACT_CONTRACT_TRANSACTION TRG WHERE TRG.CONTRACT_NO =  SRC.CONTRACT_NO)")
conn.commit()
cursor5.close()
#EGER KAYIT MEVCUTSA HISTORY ICIN GUNCELLENMESI SAGLANIR EN SON KAYDIN UZERINE IS_CURRENT = 'N' OLARAK ISLENIR
cursor6 =  conn.cursor()
cursor6.execute ("UPDATE DBO.FACT_CONTRACT_TRANSACTION  SET IS_CURRENT = 'N',EFF_TO_DATE= GETDATE() WHERE CONTRACT_NO IN  (SELECT S.CONTRACT_NO FROM DBO.STG_TRANSACTION_DATA S JOIN DBO.FACT_CONTRACT_TRANSACTION T ON S.CONTRACT_NO = T.CONTRACT_NO WHERE T.IS_CURRENT = 'Y' AND S.TRANSACTION_AMOUNT <> T.TRANSACTION_AMOUNT )AND IS_CURRENT = 'Y'")
conn.commit()
cursor6.close()
#SON EKLENEN KAYDI IS_CURRENT = 'Y' OLARAK UZERINE BASILIR
cursor7 = conn.cursor()
cursor7.execute ("INSERT INTO DBO.FACT_CONTRACT_TRANSACTION SELECT SRC.DATEID,SRC.CONTRACT_NO,SRC.TRANSACTION_ID,SRC.TRANSACTION_TYPE_ID,SRC.TRANSACTION_TYPE,SRC.COUNTERPARTY,SRC.COUNTERPARTY_LOCATION,SRC.CURRENCY,SRC.INSTRUMENTNAME,SRC.INSTRUMENT_TYPE_ID,SRC.INSTRUMENTTYPE,SRC.MIFID_II_COMPLIANCE_FLAG,SRC.FINRA_COMPLIANCE_FLAG,SRC.SEC_REPORTING_FLAG,SRC.TRANSACTION_AMOUNT,SRC.TL_AMOUNT,SRC.USD_AMOUNT,SRC.CREATE_DATE,SRC.EFF_FROM_DATE,NULL AS EFF_TO_DATE,SRC.IS_CURRENT,GETDATE() AS ETL_DATE FROM DBO.STG_TRANSACTION_DATA SRC JOIN (SELECT HH.CONTRACT_NO,HH.TRANSACTION_AMOUNT FROM (SELECT CONTRACT_NO,TRANSACTION_AMOUNT,ROW_NUMBER() OVER(PARTITION BY CONTRACT_NO ORDER BY ETL_DATE DESC) AS RNK FROM DBO.FACT_CONTRACT_TRANSACTION WHERE IS_CURRENT = 'N')HH WHERE HH.RNK = 1) TRG ON SRC.CONTRACT_NO = TRG.CONTRACT_NO AND SRC.TRANSACTION_AMOUNT <> TRG.TRANSACTION_AMOUNT")
conn.commit()
cursor7.close()

